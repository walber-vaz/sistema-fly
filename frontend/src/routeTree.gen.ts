/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardProfileImport } from './routes/_dashboard/profile'
import { Route as DashboardDashboardImport } from './routes/_dashboard/dashboard'
import { Route as DashboardSalesIndexImport } from './routes/_dashboard/sales/index'
import { Route as DashboardProductsIndexImport } from './routes/_dashboard/products/index'
import { Route as DashboardClientsIndexImport } from './routes/_dashboard/clients/index'
import { Route as DashboardProductsCreateImport } from './routes/_dashboard/products/create'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSalesIndexRoute = DashboardSalesIndexImport.update({
  id: '/sales/',
  path: '/sales/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProductsIndexRoute = DashboardProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardClientsIndexRoute = DashboardClientsIndexImport.update({
  id: '/clients/',
  path: '/clients/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProductsCreateRoute = DashboardProductsCreateImport.update({
  id: '/products/create',
  path: '/products/create',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/profile': {
      id: '/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/products/create': {
      id: '/_dashboard/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof DashboardProductsCreateImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/clients/': {
      id: '/_dashboard/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof DashboardClientsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/products/': {
      id: '/_dashboard/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof DashboardProductsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/sales/': {
      id: '/_dashboard/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof DashboardSalesIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardProductsCreateRoute: typeof DashboardProductsCreateRoute
  DashboardClientsIndexRoute: typeof DashboardClientsIndexRoute
  DashboardProductsIndexRoute: typeof DashboardProductsIndexRoute
  DashboardSalesIndexRoute: typeof DashboardSalesIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardProductsCreateRoute: DashboardProductsCreateRoute,
  DashboardClientsIndexRoute: DashboardClientsIndexRoute,
  DashboardProductsIndexRoute: DashboardProductsIndexRoute,
  DashboardSalesIndexRoute: DashboardSalesIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DashboardRouteWithChildren
  '/dashboard': typeof DashboardDashboardRoute
  '/profile': typeof DashboardProfileRoute
  '/products/create': typeof DashboardProductsCreateRoute
  '/clients': typeof DashboardClientsIndexRoute
  '/products': typeof DashboardProductsIndexRoute
  '/sales': typeof DashboardSalesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DashboardRouteWithChildren
  '/dashboard': typeof DashboardDashboardRoute
  '/profile': typeof DashboardProfileRoute
  '/products/create': typeof DashboardProductsCreateRoute
  '/clients': typeof DashboardClientsIndexRoute
  '/products': typeof DashboardProductsIndexRoute
  '/sales': typeof DashboardSalesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/profile': typeof DashboardProfileRoute
  '/_dashboard/products/create': typeof DashboardProductsCreateRoute
  '/_dashboard/clients/': typeof DashboardClientsIndexRoute
  '/_dashboard/products/': typeof DashboardProductsIndexRoute
  '/_dashboard/sales/': typeof DashboardSalesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/profile'
    | '/products/create'
    | '/clients'
    | '/products'
    | '/sales'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard'
    | '/profile'
    | '/products/create'
    | '/clients'
    | '/products'
    | '/sales'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/_dashboard/dashboard'
    | '/_dashboard/profile'
    | '/_dashboard/products/create'
    | '/_dashboard/clients/'
    | '/_dashboard/products/'
    | '/_dashboard/sales/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/dashboard",
        "/_dashboard/profile",
        "/_dashboard/products/create",
        "/_dashboard/clients/",
        "/_dashboard/products/",
        "/_dashboard/sales/"
      ]
    },
    "/_dashboard/dashboard": {
      "filePath": "_dashboard/dashboard.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/profile": {
      "filePath": "_dashboard/profile.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/products/create": {
      "filePath": "_dashboard/products/create.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/clients/": {
      "filePath": "_dashboard/clients/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/products/": {
      "filePath": "_dashboard/products/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/sales/": {
      "filePath": "_dashboard/sales/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
