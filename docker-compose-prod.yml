services:
  db:
    image: postgres:16.6-alpine
    volumes:
      - app-db-data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - shared_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2G
      restart_policy:
        condition: on-failure

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BASE_URL_API=https://sistemafly.${DOMAIN}/api
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
      restart_policy:
        condition: on-failure
    networks:
      - shared_network
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+psycopg://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_ACCESS_TOKEN_EXPIRE_DAY=${JWT_ACCESS_TOKEN_EXPIRE_DAY}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - ENVIRONMENT=${ENVIRONMENT}
    # Todo: Add healthcheck
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/utils/health-check/"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=https://sistemafly.${DOMAIN}/api/v1
        - NODE_ENV=production
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2G
      restart_policy:
        condition: on-failure
    networks:
      - shared_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./public:/var/www/public

networks:
  shared_network:
    driver: bridge

volumes:
    app-db-data:
