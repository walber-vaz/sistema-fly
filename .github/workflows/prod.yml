name: '[DEPLOY] Production'
on:
  push:
    branches:
      - main

env:
  DB_NAME: ${{ vars.DB_NAME }}
  DB_USER: ${{ vars.DB_USER }}
  DB_PASSWORD: ${{ vars.DB_PASSWORD }}
  SECRET_KEY: ${{ vars.SECRET_KEY }}
  JWT_ALGORITHM: ${{ vars.JWT_ALGORITHM }}
  JWT_ACCESS_TOKEN_EXPIRE_DAY: ${{ vars.JWT_ACCESS_TOKEN_EXPIRE_DAY }}
  JWT_ISSUER: ${{ vars.JWT_ISSUER }}
  JWT_AUDIENCE: ${{ vars.JWT_AUDIENCE }}
  ENVIRONMENT: ${{ vars.ENVIRONMENT }}
  DOMAIN: ${{ vars.DOMAIN }}
  EMAIL: ${{ vars.EMAIL }}
  USERNAME: ${{ vars.USERNAME }}
  HASHED_PASSWORD: ${{ vars.HASHED_PASSWORD }}

jobs:
  build_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SCP Action
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: .
          target: "/home/sistemafly/sistemafly"
          strip_components: 0
          timeout: 120s

      - name: Run SSH Commands
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DB_NAME,DB_USER,DB_PASSWORD,SECRET_KEY,JWT_ALGORITHM,JWT_ACCESS_TOKEN_EXPIRE_DAY,JWT_ISSUER,JWT_AUDIENCE,ENVIRONMENT,DOMAIN,EMAIL,USERNAME,HASHED_PASSWORD
          script: |
            cd /home/sistemafly/sistemafly

            # Criar o arquivo .env com as variáveis
            echo "DB_NAME=${DB_NAME}" > .env
            echo "DB_USER=${DB_USER}" >> .env
            echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
            echo "SECRET_KEY=${SECRET_KEY}" >> .env
            echo "JWT_ALGORITHM=${JWT_ALGORITHM}" >> .env
            echo "JWT_ACCESS_TOKEN_EXPIRE_DAY=${JWT_ACCESS_TOKEN_EXPIRE_DAY}" >> .env
            echo "JWT_ISSUER=${JWT_ISSUER}" >> .env
            echo "JWT_AUDIENCE=${JWT_AUDIENCE}" >> .env
            echo "ENVIRONMENT=${ENVIRONMENT}" >> .env
            echo "DOMAIN=${DOMAIN}" >> .env
            echo "EMAIL=${EMAIL}" >> .env
            echo "USERNAME=${USERNAME}" >> .env
            echo "HASHED_PASSWORD=${HASHED_PASSWORD}" >> .env
            
            # Verificar se o arquivo foi criado corretamente
            echo "Conteúdo do arquivo .env (sem valores sensíveis):"
            cat .env | grep -v "PASSWORD\|KEY"
            
            # Ajustar permissões e executar deploy
            chmod 600 .env
            
            chmod +x ./scripts/deploy.sh
            bash ./scripts/deploy.sh 2>&1 | tee deploy.log
