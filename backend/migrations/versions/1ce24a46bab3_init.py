"""init

Revision ID: 1ce24a46bab3
Revises:
Create Date: 2024-12-22 10:57:42.473887

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1ce24a46bab3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'tb_users',
        sa.Column(
            'id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False
        ),
        sa.Column('first_name', sa.String(length=50), nullable=False),
        sa.Column('surname', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=200), nullable=False),
        sa.Column('phone_number', sa.String(length=12), nullable=True),
        sa.Column('password', sa.String(), nullable=False),
        sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
        sa.Column(
            'created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.Column(
            'updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('tb_users_pkey')),
    )
    op.create_index(
        op.f('tb_users_created_at_idx'), 'tb_users', ['created_at'], unique=False
    )
    op.create_index(op.f('tb_users_email_idx'), 'tb_users', ['email'], unique=True)
    op.create_index(op.f('tb_users_id_idx'), 'tb_users', ['id'], unique=True)
    op.create_index(
        op.f('tb_users_is_active_idx'), 'tb_users', ['is_active'], unique=False
    )
    op.create_index(
        op.f('tb_users_phone_number_idx'), 'tb_users', ['phone_number'], unique=False
    )
    op.create_table(
        'tb_brands',
        sa.Column(
            'id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False
        ),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column(
            'created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.Column(
            'updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ['user_id'], ['tb_users.id'], name=op.f('tb_brands_user_id_fkey')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('tb_brands_pkey')),
    )
    op.create_index(
        op.f('tb_brands_created_at_idx'), 'tb_brands', ['created_at'], unique=False
    )
    op.create_index(op.f('tb_brands_id_idx'), 'tb_brands', ['id'], unique=True)
    op.create_index(
        op.f('tb_brands_user_id_idx'), 'tb_brands', ['user_id'], unique=False
    )
    op.create_table(
        'tb_categories',
        sa.Column(
            'id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False
        ),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column(
            'created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.Column(
            'updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ['user_id'], ['tb_users.id'], name=op.f('tb_categories_user_id_fkey')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('tb_categories_pkey')),
        sa.UniqueConstraint('name', name=op.f('tb_categories_name_key')),
    )
    op.create_index(
        op.f('tb_categories_created_at_idx'),
        'tb_categories',
        ['created_at'],
        unique=False,
    )
    op.create_index(op.f('tb_categories_id_idx'), 'tb_categories', ['id'], unique=True)
    op.create_index(
        op.f('tb_categories_user_id_idx'), 'tb_categories', ['user_id'], unique=False
    )
    op.create_table(
        'tb_products',
        sa.Column(
            'id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False
        ),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('description', sa.String(length=200), nullable=True),
        sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column('price_sale', sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column('stock', sa.Integer(), nullable=False),
        sa.Column('code_product', sa.String(length=8), nullable=False),
        sa.Column('barcode', sa.String(length=13), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column(
            'created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.Column(
            'updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.Column(
            'image_url', sa.String(), server_default=sa.text('NULL'), nullable=True
        ),
        sa.Column('brand_id', sa.Uuid(), server_default=sa.text('NULL'), nullable=True),
        sa.Column(
            'category_id', sa.Uuid(), server_default=sa.text('NULL'), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ['brand_id'], ['tb_brands.id'], name=op.f('tb_products_brand_id_fkey')
        ),
        sa.ForeignKeyConstraint(
            ['category_id'],
            ['tb_categories.id'],
            name=op.f('tb_products_category_id_fkey'),
        ),
        sa.ForeignKeyConstraint(
            ['user_id'], ['tb_users.id'], name=op.f('tb_products_user_id_fkey')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('tb_products_pkey')),
        sa.UniqueConstraint('barcode', name=op.f('tb_products_barcode_key')),
        sa.UniqueConstraint('code_product', name=op.f('tb_products_code_product_key')),
        sa.UniqueConstraint('name', name=op.f('tb_products_name_key')),
    )
    op.create_index(
        op.f('tb_products_brand_id_idx'), 'tb_products', ['brand_id'], unique=False
    )
    op.create_index(
        op.f('tb_products_category_id_idx'),
        'tb_products',
        ['category_id'],
        unique=False,
    )
    op.create_index(
        op.f('tb_products_created_at_idx'), 'tb_products', ['created_at'], unique=False
    )
    op.create_index(op.f('tb_products_id_idx'), 'tb_products', ['id'], unique=True)
    op.create_index(
        op.f('tb_products_user_id_idx'), 'tb_products', ['user_id'], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('tb_products_user_id_idx'), table_name='tb_products')
    op.drop_index(op.f('tb_products_id_idx'), table_name='tb_products')
    op.drop_index(op.f('tb_products_created_at_idx'), table_name='tb_products')
    op.drop_index(op.f('tb_products_category_id_idx'), table_name='tb_products')
    op.drop_index(op.f('tb_products_brand_id_idx'), table_name='tb_products')
    op.drop_table('tb_products')
    op.drop_index(op.f('tb_categories_user_id_idx'), table_name='tb_categories')
    op.drop_index(op.f('tb_categories_id_idx'), table_name='tb_categories')
    op.drop_index(op.f('tb_categories_created_at_idx'), table_name='tb_categories')
    op.drop_table('tb_categories')
    op.drop_index(op.f('tb_brands_user_id_idx'), table_name='tb_brands')
    op.drop_index(op.f('tb_brands_id_idx'), table_name='tb_brands')
    op.drop_index(op.f('tb_brands_created_at_idx'), table_name='tb_brands')
    op.drop_table('tb_brands')
    op.drop_index(op.f('tb_users_phone_number_idx'), table_name='tb_users')
    op.drop_index(op.f('tb_users_is_active_idx'), table_name='tb_users')
    op.drop_index(op.f('tb_users_id_idx'), table_name='tb_users')
    op.drop_index(op.f('tb_users_email_idx'), table_name='tb_users')
    op.drop_index(op.f('tb_users_created_at_idx'), table_name='tb_users')
    op.drop_table('tb_users')
    # ### end Alembic commands ###
